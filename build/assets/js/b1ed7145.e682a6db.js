"use strict";(self.webpackChunk_brizy_docs=self.webpackChunk_brizy_docs||[]).push([[1854],{6979:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var l=t(2540),s=t(3023);const i={toc_max_heading_level:4},c="Icons Picker",r={id:"editor-controls/data-controls/iconsPicker",title:"Icons Picker",description:"The iconsPicker control in Brizy functions similarly to checkboxes but features a distinct user interface. Users can select by icons for various purposes, and the blue checkmarks visually indicate which icons are currently active or chosen.",source:"@site/docs-internals/editor-controls/data-controls/iconsPicker.md",sourceDirName:"editor-controls/data-controls",slug:"/editor-controls/data-controls/iconsPicker",permalink:"/docs-internals/editor-controls/data-controls/iconsPicker",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"Icon Setter",permalink:"/docs-internals/editor-controls/data-controls/iconSetter"},next:{title:"Image Upload",permalink:"/docs-internals/editor-controls/data-controls/imageUpload"}},d={},o=[{value:"Parameters",id:"parameters",level:3},{value:"Basic example",id:"basic-example",level:3},{value:"Return value",id:"return-value",level:3},{value:"Usage",id:"usage",level:3},{value:"Label example",id:"label-example",level:4},{value:"Class name example",id:"class-name-example",level:4},{value:"Icon example",id:"icon-example",level:4},{value:"Roles example",id:"roles-example",level:4},{value:"Devices examples",id:"devices-examples",level:4},{value:"Disabled examples",id:"disabled-examples",level:4},{value:"Helper examples",id:"helper-examples",level:4},{value:"States examples",id:"states-examples",level:4},{value:"Default value examples",id:"default-value-examples",level:4},{value:"CSS examples",id:"css-examples",level:4},{value:"Usage in HTML example",id:"usage-in-html-example",level:4}];function a(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"icons-picker",children:"Icons Picker"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"iconsPicker"})," control in Brizy functions similarly to checkboxes but features a distinct user interface. Users can select by icons for various purposes, and the blue checkmarks visually indicate which icons are currently active or chosen."]}),"\n",(0,l.jsxs)(n.p,{children:["Example of the ",(0,l.jsx)(n.code,{children:"iconsPicker"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Icons Picker",src:t(4809).A+"",width:"241",height:"319"})}),"\n",(0,l.jsxs)(n.p,{children:["Example of checked ",(0,l.jsx)(n.code,{children:"iconsPicker"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Icons Picker Checked",src:t(2022).A+"",width:"252",height:"316"})}),"\n",(0,l.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"id"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["The identifier of the key where the ",(0,l.jsx)(n.code,{children:"iconsPicker"})," will save your data"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"type"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Type should be ",(0,l.jsx)(n.code,{children:'"iconsPicker"'})," to use this control"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"label?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The label displayed on the left side of the control"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"className?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The custom CSS class name that will be set on the control. It can be used to modify the control styles."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"icon?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Icon name that will be rendered on left side of the control's label. View all ",(0,l.jsx)(n.a,{href:"/docs-internals/icons/",children:"icons"}),"."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"position?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The position of the control in toolbar"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"roles?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Array<Role>"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Render the control only if the current user's role matches one of the roles in the provided array. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:'type Role = "admin" | "viewer" | "editor" | "designer" | "manager"'})})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"devices?"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:'"all"'})," | ",(0,l.jsx)(n.code,{children:'"desktop"'})," | ",(0,l.jsx)(n.code,{children:'"responsive"'})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"all"'})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Define the devices where the control will be rendered. ",(0,l.jsx)(n.code,{children:'"all"'})," renders the control on all devices. ",(0,l.jsx)(n.code,{children:'"desktop"'})," renders the control only on desktop devices. ",(0,l.jsx)(n.code,{children:'"responsive"'})," renders the control on both tablet and mobile devices."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"disabled?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Configure the condition under which the control is disabled or enabled."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"states?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Array<State>"})}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["[",(0,l.jsx)(n.code,{children:'"normal"'}),"]"]}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Allows for different styles based on the element's state ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("b",{children:(0,l.jsx)(n.code,{children:'State = "normal" | "hover" | "active"'})})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"normal"'})," - the normal state of an element, ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"hover"'})," - the state when the element is hovered over, ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"active"'})," - the state when the element is active (e.g., current page in pagination)"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"helper?.content"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"If provided, an icon is displayed next to the label. When hovering over this icon, a tooltip with additional information appears."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"helper?.position"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:'"top-start"'})," | ",(0,l.jsx)(n.code,{children:'"top"'})," | ",(0,l.jsx)(n.code,{children:'"top-end"'})," | ",(0,l.jsx)(n.code,{children:'"right-start"'})," | ",(0,l.jsx)(n.code,{children:'"right"'})," | ",(0,l.jsx)(n.code,{children:'"right-end"'})," | ",(0,l.jsx)(n.code,{children:'"bottom-end"'})," | ",(0,l.jsx)(n.code,{children:'"bottom"'})," | ",(0,l.jsx)(n.code,{children:'"bottom-start"'})," | ",(0,l.jsx)(n.code,{children:'"left-end"'})," | ",(0,l.jsx)(n.code,{children:'"left"'})," | ",(0,l.jsx)(n.code,{children:'"left-start"'})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"top"'})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Specifies the position of the tooltip relative to the helper icon."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"choices"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Array<Choice>"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["A required property that defines the array of choice objects to render as icons elements.",(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsx)("b",{children:(0,l.jsx)(n.code,{children:"Choice: { title: string, icon: string, value: string }"})})," ",(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),(0,l.jsx)(n.code,{children:"title"})," - the title of the icon element.",(0,l.jsx)("br",{}),(0,l.jsx)(n.code,{children:"icon"})," - the icon associated with the icon element.",(0,l.jsx)("br",{}),(0,l.jsx)(n.code,{children:"value"})," - the value returned by the ",(0,l.jsx)(n.code,{children:"iconsPicker"})," when this option is selected."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"default?  "})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Default"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["The default control value. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("b",{children:(0,l.jsx)(n.code,{children:"Default: { value: string; active: string; }"})})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"value"})," - the control's custom initial value ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"active"})," - the active icon by default"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"style?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"function"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["This function generates CSS output based on the value from the control. The parameter is an object containing a ",(0,l.jsx)(n.code,{children:"value"})," key, which holds the current value of the control. The function returns an object with a CSS selector key and CSS property values. ",(0,l.jsxs)("pre",{children:[(0,l.jsx)(n.code,{children:"style: ({value}) => {"}),(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"return {"}),(0,l.jsx)("br",{})," \xa0",(0,l.jsx)(n.code,{children:'"{{WRAPPER}} .brz-text": {'}),(0,l.jsx)("br",{})," \xa0 \xa0 ",(0,l.jsx)(n.code,{children:'display: value === "none" ? "none" : "block"'}),(0,l.jsx)("br",{})," \xa0 \xa0 ",(0,l.jsx)(n.code,{children:"}"}),(0,l.jsx)("br",{})," \xa0 ",(0,l.jsx)(n.code,{children:"}"}),(0,l.jsx)("br",{}),(0,l.jsx)(n.code,{children:"}"})]})]})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"basic-example",children:"Basic example"}),"\n",(0,l.jsx)(n.p,{children:"Standard definition with only the required keys. This control will be displayed on all devices"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"return-value",children:"Return value"}),"\n",(0,l.jsxs)(n.p,{children:["The return value of the ",(0,l.jsx)(n.code,{children:"iconsPicker"})," control is an object with two properties:",(0,l.jsx)(n.code,{children:"value"}),": a string representing some value.\n",(0,l.jsx)(n.code,{children:"active"}),": a string indicating the currently active state."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"{\n  value: string;\n  active: string;\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"Example of value:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  value: \'["value-1", "value-2"]\',\n  active: "value-1"\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.h4,{id:"label-example",children:"Label example"}),"\n",(0,l.jsx)(n.p,{children:"Adding a label on the left side of control"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  label: "Style",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"class-name-example",children:"Class name example"}),"\n",(0,l.jsx)(n.p,{children:"Adding a CSS class to the control's DOM node."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  className: "myClass"\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"icon-example",children:"Icon example"}),"\n",(0,l.jsx)(n.p,{children:'Adding a "repeat" icon to the left of the control\'s label.'}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  icon: "nc-repeat"\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"roles-example",children:"Roles example"}),"\n",(0,l.jsx)(n.p,{children:"Show the control only to users with admin and designer privileges."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  roles: ["admin", "designer"]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"devices-examples",children:"Devices examples"}),"\n",(0,l.jsxs)(n.p,{children:["It will be rendered on all devices. This value can be skipped because it is set to ",(0,l.jsx)(n.code,{children:'"all"'})," by default."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  devices: "all",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Rendering will occur only on ",(0,l.jsx)(n.code,{children:"desktop"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  devices: "desktop",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["The display is limited to responsive modes, specifically ",(0,l.jsx)(n.code,{children:"tablet"})," and ",(0,l.jsx)(n.code,{children:"mobile"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  devices: "responsive",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"disabled-examples",children:"Disabled examples"}),"\n",(0,l.jsx)(n.p,{children:"Control will be disabled. Normally, here should be your dynamic condition."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  disabled: true,\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Control will be disabled when ",(0,l.jsx)(n.code,{children:"videoType"})," variable will be ",(0,l.jsx)(n.code,{children:'"custom"'}),".\n",(0,l.jsx)(n.code,{children:"getValue"})," is a getter function that allows us to retrieve the value of controls by their id.\n",(0,l.jsx)(n.code,{children:'"videoType"'})," is the id of the ",(0,l.jsx)(n.code,{children:'"select"'})," control below."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const getToolbarContols = ({ getValue }) => {\n  const videoType = getValue("videoType")\n\n  return [\n    {\n      id: "videoType",\n      type: "select",\n      choices: [\n        { title: "Youtube", value: "youtube" },\n        { title: "Custom", value: "custom" }\n      ]\n    },\n    {\n      id: "icons",\n      type: "iconsPicker",\n      disabled: videoType === "custom",\n      choices: [\n        {\n          title: "Item 1",\n          value: "val1",\n          icon: "nc-star"\n        },\n        {\n          title: "Item 2",\n          value: "val2",\n          icon: "nc-line"\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"helper-examples",children:"Helper examples"}),"\n",(0,l.jsxs)(n.p,{children:["The helper object contains a content property with the value ",(0,l.jsx)(n.code,{children:'"Helper"'}),", which will be displayed as additional guidance or information for the user."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  helper: {\n    content: "Helper"\n  }\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["When the helper object contains a position property with the value ",(0,l.jsx)(n.code,{children:'"top-start"'}),", indicating that the helper text will be displayed at the top start of icon."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  helper: {\n    content: "Helper",\n    position: "top-start"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"states-examples",children:"States examples"}),"\n",(0,l.jsx)(n.p,{children:"Allows the control to work in normal and hover states."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  states: ["normal", "hover"]\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"Allows the control to work in normal, hover and active states."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  states: ["normal", "hover", "active"]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"default-value-examples",children:"Default value examples"}),"\n",(0,l.jsxs)(n.p,{children:["In this example, the ",(0,l.jsx)(n.code,{children:"iconsPicker"})," control that has the value ",(0,l.jsx)(n.code,{children:'"val1"'})," by default. And ",(0,l.jsx)(n.code,{children:'"val2"'})," item will be active by default."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Item 1",\n      value: "val1",\n      icon: "nc-star"\n    },\n    {\n      title: "Item 2",\n      value: "val2",\n      icon: "nc-line"\n    }\n  ],\n  default: {\n    value: \'["val1"]\',\n    active: "val2"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"css-examples",children:"CSS examples"}),"\n",(0,l.jsxs)(n.p,{children:["Change the fontSize of the ",(0,l.jsx)(n.code,{children:".brz-text"})," element with CSS using custom values from a ",(0,l.jsx)(n.code,{children:"iconsPicker"})," control."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "icons",\n  type: "iconsPicker",\n  choices: [\n    {\n      title: "Small",\n      value: "small",\n      icon: "nc-small"\n    },\n    {\n      title: "Big",\n      value: "big",\n      icon: "nc-big"\n    }\n  ],\n  style: ({ value }) => {\n    return {\n      "{{WRAPPER}} .brz-text": {\n        "font-size": value.value === "small" ? 12 : 15\n      }\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"usage-in-html-example",children:"Usage in HTML example"}),"\n",(0,l.jsxs)(n.p,{children:["In the example below, we use the ",(0,l.jsx)(n.code,{children:"iconsPicker"})," output value to determine the decoration for button text."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'import { Brizy } from "@brizy/core";\nimport React, { JSX } from "react";\nimport { Icon } from "./Icon";\n\ninterface Props {\n  style: string;\n}\n\nconst Button = (props: Props): JSX.Element => {\n  const { style } = props\n\n  const styleClass = style ? JSON.parse(style).join(" ") : ""\n\n  const className = "brz-button" + " " + styleClass\n\n  return <div className={className}>Click</div>\n}\n\nBrizy.registerComponent({\n  id: "ThirdParty.Button",\n  component: { editor: Button, view: Button },\n  title: "My Button",\n  category: "custom",\n  options: (props) => {\n    return [\n      {\n        selector: ".brz-button",\n        toolbar: [\n          {\n            id: "toolbarCurrentElement",\n            type: "popover",\n            config: {\n              icon: "nc-button",\n              title: "Button"\n            },\n            devices: "desktop",\n            options: [\n              {\n                id: "style",\n                type: "iconsPicker",\n                choices: [\n                  {\n                    title: "Underline",\n                    value: "underline",\n                    icon: "nc-underline"\n                  },\n                  {\n                    title: "Bold",\n                    value: "bold",\n                    icon: "nc-bold"\n                  },\n                  {\n                    title: "Italic",\n                    value: "italic",\n                    icon: "nc-italic"\n                  }\n                ],\n                devices: "desktop"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n})\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},4809:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/iconsPicker-2878a984763c576745671a348cb06971.png"},2022:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/iconsPickerChecked-17bd150c22b08321481d3a957919a388.png"},3023:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var l=t(3696);const s={},i=l.createContext(s);function c(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);