"use strict";(self.webpackChunk_brizy_docs=self.webpackChunk_brizy_docs||[]).push([[3431],{1995:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var l=t(2540),s=t(3023);const o={toc_max_heading_level:4},d="Box Shadow",i={id:"editor-controls/data-controls/box-shadow",title:"Box Shadow",description:"The boxshadow control provides an interface to modify the CSS box-shadow property of elements.",source:"@site/docs-internals/editor-controls/data-controls/box-shadow.md",sourceDirName:"editor-controls/data-controls",slug:"/editor-controls/data-controls/box-shadow",permalink:"/docs-internals/editor-controls/data-controls/box-shadow",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"Border",permalink:"/docs-internals/editor-controls/data-controls/border"},next:{title:"Button",permalink:"/docs-internals/editor-controls/data-controls/button"}},r={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Basic example",id:"basic-example",level:3},{value:"Return value",id:"return-value",level:3},{value:"Usage",id:"usage",level:3},{value:"Class name example",id:"class-name-example",level:4},{value:"Roles example",id:"roles-example",level:4},{value:"Devices examples",id:"devices-examples",level:4},{value:"Disabled examples",id:"disabled-examples",level:4},{value:"States examples",id:"states-examples",level:4},{value:"Config <code>type</code> example",id:"config-type-example",level:4},{value:"Config <code>opacity</code> example",id:"config-opacity-example",level:4},{value:"Default value examples",id:"default-value-examples",level:4},{value:"CSS examples (<code>selector</code>, <code>style</code>)",id:"css-examples-selector-style",level:4},{value:"Usage in HTML example",id:"usage-in-html-example",level:4}];function a(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"box-shadow",children:"Box Shadow"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"boxshadow"})," control provides an interface to modify the CSS ",(0,l.jsx)(n.code,{children:"box-shadow"})," property of elements."]}),"\n",(0,l.jsx)(n.p,{children:"Example of the control:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Text Shadow Info",src:t(4410).A+"",width:"305",height:"281"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Shadow dropdown menu - this dropdown menu allows you to choose whether to apply a shadow to the element or not. It has three options: ",(0,l.jsx)(n.code,{children:"none"})," , ",(0,l.jsx)(n.code,{children:"inset"})," and ",(0,l.jsx)(n.code,{children:"outset"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"Color selector area - this is where you can pick the exact color by clicking on the desired point within the color gradient."}),"\n",(0,l.jsx)(n.li,{children:"Hue slider - this vertical slider allows you to choose the hue (basic color) you want to work with."}),"\n",(0,l.jsx)(n.li,{children:"Opacity slider - this slider lets you adjust the opacity of the selected color."}),"\n",(0,l.jsx)(n.li,{children:"Color presets - these are preset color options from the global styles that you can quickly select."}),"\n",(0,l.jsx)(n.li,{children:"Settings icon - opens sidebar with the global styles."}),"\n",(0,l.jsx)(n.li,{children:"Hex color input - this area shows the hexadecimal color code of the selected color and allows you to input a specific hex code to choose a color directly. The eyedropper icon next to it lets you select any color from anywhere on the page by clicking on it."}),"\n",(0,l.jsx)(n.li,{children:"Blur radius - this input field allows to specify the blur radius for the shadow."}),"\n",(0,l.jsx)(n.li,{children:"Vertical offset - this input field allows to specify the vertical offset of the shadow."}),"\n",(0,l.jsx)(n.li,{children:"Horizontal offset - this input field allows to specify the horizontal offset of the shadow."}),"\n",(0,l.jsx)(n.li,{children:"Opacity offset - this input field allows to specify the opacity offset of the shadow."}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Example of control with state ",(0,l.jsx)(n.code,{children:'"normal"'}),":"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Box Shadow Normal",src:t(6598).A+"",width:"324",height:"295"})}),"\n",(0,l.jsxs)(n.p,{children:["Example of control with state ",(0,l.jsx)(n.code,{children:'"hover"'}),":"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Element Shadow Hover",src:t(3030).A+"",width:"324",height:"295"})}),"\n",(0,l.jsx)(n.p,{children:"Example of the control with dropdown opened:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Element Shadow",src:t(7465).A+"",width:"290",height:"270"})}),"\n",(0,l.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"id"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The identifier of the key where the box shadow will save your data"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"type"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Type should be ",(0,l.jsx)(n.code,{children:'"boxShadow"'})," to use this control"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"className?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The custom CSS class name that will be set on the control. It can be used to modify the control styles"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"position?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The position of the control in toolbar"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"roles?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Array<Role>"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Render the control only if the current user's role matches one of the roles in the provided array. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:'type Role = "admin" | "viewer" | "editor" | "designer" | "manager"'})})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"devices?"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:'"all"'})," | ",(0,l.jsx)(n.code,{children:'"desktop"'})," | ",(0,l.jsx)(n.code,{children:'"responsive"'})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"all"'})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Define the devices where the control will be rendered. ",(0,l.jsx)(n.code,{children:'"all"'})," renders the control on all devices. ",(0,l.jsx)(n.code,{children:'"desktop"'})," renders the control only on desktop devices. ",(0,l.jsx)(n.code,{children:'"responsive"'})," renders the control on both tablet and mobile devices"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"disabled?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Configure the condition under which the control is disabled or enabled"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"states?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Array<State>"})}),(0,l.jsxs)(n.td,{style:{textAlign:"center"},children:["[",(0,l.jsx)(n.code,{children:'"normal"'}),"]"]}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Allows for different styles based on the element's state ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("b",{children:(0,l.jsx)(n.code,{children:'State = "normal" | "hover" | "active"'})})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"normal"'})," - the normal state of an element, ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"hover"'})," - the state when the element is hovered over, ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"active"'})," - the state when the element is active (e.g., current page in pagination)"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"config?.type"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:'"none"'})," | ",(0,l.jsx)(n.code,{children:'"inset"'})," | ",(0,l.jsx)(n.code,{children:'"outset"'})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"none"'})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Specifies the type of box shadow. It determines how the shadow is displayed around the element. The types are: ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"none"'})," - no shadow. ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"inset"'})," - shadow is inside the element. ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'"outset"'})," - shadow is outside the element."]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"config?.opacity"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"true"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Indicates whether the opacity setting is enabled for the box shadow. It determines if the box shadow's opacity can be adjusted."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"default?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Default"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["The default control value. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("b",{children:(0,l.jsx)(n.code,{children:"Default: { value: {blur: number; value: string; spread: number; hex: string; horizontal: string; opacity: string; palette: string; vertical: string; }; }"})})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{}),"   ",(0,l.jsx)(n.code,{children:"blur"})," - specifies the blur radius for the shadow; ",(0,l.jsx)("br",{}),"   ",(0,l.jsx)(n.code,{children:"value"})," - indicates the current type of box shadow. It can take one of the following values: ",(0,l.jsx)(n.code,{children:'"none"'}),", ",(0,l.jsx)(n.code,{children:'"inset"'})," and ",(0,l.jsx)(n.code,{children:'"outset"'}),";",(0,l.jsx)("br",{}),"  ",(0,l.jsx)(n.code,{children:"spread"})," - defines the spread radius of the shadow. Positive values will cause the shadow to expand and grow larger, while negative values will cause it to shrink;",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"hex"})," - defines the color of the shadow in hexadecimal format; ",(0,l.jsx)("br",{}),"  ",(0,l.jsx)(n.code,{children:"horizontal"})," - horizontal offset of the shadow; ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"opacity"})," - indicates the opacity of the element itself, not the shadow; ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"palette"})," - predefined palette from global styles; ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"vertical"})," - vertical offset of the shadow; ",(0,l.jsx)("br",{})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"selector?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The CSS selector to which the styles will be applied"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"style?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"function"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["This function generates CSS output based on the value from the control. The parameter is an object containing a ",(0,l.jsx)(n.code,{children:"value"})," key, which holds the current value of the control. The function returns an object with a CSS selector key and CSS property values.  ",(0,l.jsxs)("pre",{children:[(0,l.jsx)(n.code,{children:"style: ({value}) => {"}),(0,l.jsx)("br",{}),"  ",(0,l.jsx)(n.code,{children:"return {"}),(0,l.jsx)("br",{}),"  ",(0,l.jsx)(n.code,{children:'"{{WRAPPER}} .brz-container": {'}),(0,l.jsx)("br",{}),"   ",(0,l.jsx)(n.code,{children:'"box-shadow": value.value === "inset" ? '})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:'  "rgba(" + hexToRgba(value.hex, value.opacity) + ") 10px"  : "none"'}),(0,l.jsx)("br",{}),"  ",(0,l.jsx)(n.code,{children:"}"}),(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"}"}),(0,l.jsx)("br",{}),(0,l.jsx)(n.code,{children:"}"})]})]})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"basic-example",children:"Basic example"}),"\n",(0,l.jsx)(n.p,{children:"Standard definition with only the required keys. This control will be displayed on all devices."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow"\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"return-value",children:"Return value"}),"\n",(0,l.jsx)(n.p,{children:"Returns an object with the following values:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  blur: number;\n  value: "none" | "inset" | "outset";\n  spread: number;\n  hex: string;\n  horizontal: string;\n  opacity: number;\n  palette: string | undefined;\n  vertical: number;\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"Example of value:"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"blur"})," - specifies the blur radius for the shadow; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.code,{children:"value"})," - indicates the current type of box shadow. It can take one of the following values: ",(0,l.jsx)(n.code,{children:'"none"'}),", ",(0,l.jsx)(n.code,{children:'"inset"'})," and ",(0,l.jsx)(n.code,{children:'"outset"'}),";",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.code,{children:"spread"})," - defines the spread radius of the shadow. Positive values will cause the shadow to expand and grow larger, while negative values will cause it to shrink;",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.code,{children:"hex"})," - defines the color of the shadow in hexadecimal format; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.code,{children:"horizontal"})," - horizontal offset of the shadow; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.code,{children:"opacity"})," - indicates the opacity of the element itself, not the shadow; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.code,{children:"palette"})," - predefined palette from global styles; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.code,{children:"vertical"})," - vertical offset of the shadow; ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  blur: "10",\n  value: "inset",\n  spread: "5",\n  hex: "#ffffff",\n  horizontal: "0",\n  opacity: "50",\n  palette: "default",\n  vertical: "0"\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.h4,{id:"class-name-example",children:"Class name example"}),"\n",(0,l.jsx)(n.p,{children:"Adding a CSS class to the control's DOM node."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  className: "myBoxShadow"\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"roles-example",children:"Roles example"}),"\n",(0,l.jsx)(n.p,{children:"Show the control only to users with admin and designer privileges."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  roles: ["admin", "designer"]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"devices-examples",children:"Devices examples"}),"\n",(0,l.jsxs)(n.p,{children:["It will be rendered on all devices. This value can be skipped because it is set to ",(0,l.jsx)(n.code,{children:'"all"'})," by default."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  devices: "all"\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Rendering will occur only on ",(0,l.jsx)(n.code,{children:"desktop"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  devices: "desktop"\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["The display is limited to responsive modes, specifically ",(0,l.jsx)(n.code,{children:"tablet"})," and ",(0,l.jsx)(n.code,{children:"mobile"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  devices: "responsive"\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"disabled-examples",children:"Disabled examples"}),"\n",(0,l.jsx)(n.p,{children:"Control will be disabled. Normally, here should be your dynamic condition."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  disabled: true\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Control will be disabled when ",(0,l.jsx)(n.code,{children:"videoType"})," variable will be ",(0,l.jsx)(n.code,{children:'"custom"'}),".\n",(0,l.jsx)(n.code,{children:"getValue"})," is a getter function that allows us to retrieve the value of controls by their id.\n",(0,l.jsx)(n.code,{children:'"videoType"'})," is the id of the ",(0,l.jsx)(n.code,{children:'"select"'})," control below."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const getToolbarContols = ({ getValue }) => {\n  const videoType = getValue("videoType");\n\n  return [\n    {\n      id: "videoType",\n      type: "select",\n      choices: [\n        { title: "Youtube", value: "youtube" },\n        { title: "Custom", value: "custom" } \n      ]\n    },\n    {\n      id: "boxShadow",\n      type: "boxShadow",\n      disabled: videoType === "custom"\n    }\n  ];\n};\n'})}),"\n",(0,l.jsx)(n.h4,{id:"states-examples",children:"States examples"}),"\n",(0,l.jsxs)(n.p,{children:["Allows the control to work in ",(0,l.jsx)(n.code,{children:'"normal'}),'" and ',(0,l.jsx)(n.code,{children:'"hover"'})," states."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  states: ["normal", "hover"]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Allows the control to work in ",(0,l.jsx)(n.code,{children:'"normal'}),'", ',(0,l.jsx)(n.code,{children:'"hover"'})," and ",(0,l.jsx)(n.code,{children:'"active"'})," states."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  states: ["normal", "hover", "active"]\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"config-type-example",children:["Config ",(0,l.jsx)(n.code,{children:"type"})," example"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"config.type"})," parameter determines the type of shadow effect.",(0,l.jsx)("br",{}),"\nWhen the type is set to ",(0,l.jsx)(n.code,{children:'"outset"'}),", the dropdown menu will only include ",(0,l.jsx)(n.code,{children:"None"})," and ",(0,l.jsx)(n.code,{children:"Outset"})," options."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  config: {\n    type: "outset"\n  }\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"config-opacity-example",children:["Config ",(0,l.jsx)(n.code,{children:"opacity"})," example"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"config.opacity"})," is set to ",(0,l.jsx)(n.code,{children:"false"}),", indicating that the opacity setting for the box shadow is disabled."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  config: {\n    opacity: false\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"default-value-examples",children:"Default value examples"}),"\n",(0,l.jsxs)(n.p,{children:["In this example, the ",(0,l.jsx)(n.code,{children:"boxShadow"})," control has default values specified for its properties."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  default: {\n    blur: "10",\n    value: "inset",\n    spread: "5",\n    hex: "#ffffff",\n    horizontal: "0",\n    opacity: "50",\n    palette: "default",\n    vertical: "0"\n  }\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"css-examples-selector-style",children:["CSS examples (",(0,l.jsx)(n.code,{children:"selector"}),", ",(0,l.jsx)(n.code,{children:"style"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Configure the CSS ",(0,l.jsx)(n.code,{children:"box-shadow"})," property of the ",(0,l.jsx)(n.code,{children:".brz-image"})," element using ",(0,l.jsx)(n.code,{children:"selector"}),". All the styles will be\napplied automatically."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  states: ["normal", "hover"],\n  selector: "{{WRAPPER}}:hover .brz-image"\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["This example demonstrates how to dynamically apply a ",(0,l.jsx)(n.code,{children:"boxShadow"})," style. The style function generates the appropriate CSS based on the value property."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "boxShadow",\n  type: "boxShadow",\n  style: ({ value }) => {\n    if (value.value !== "none") {\n      return {\n        "{{WRAPPER}} .brz-container": {\n          "box-shadow": `${value.horizontal}px \n          ${value.vertical}px ${value.blur}px ${value.spread}px ${hexToRgba(value.hex,value.opacity)}`\n        }\n      }\n    }\n\n    return {\n      "{{WRAPPER}} .brz-container": {\n        "box-shadow": "none"\n      }\n    }\n  }\n}\n\n'})}),"\n",(0,l.jsx)(n.h4,{id:"usage-in-html-example",children:"Usage in HTML example"}),"\n",(0,l.jsxs)(n.p,{children:["To obtain values for the CSS ",(0,l.jsx)(n.code,{children:"box-shadow"})," property, access the necessary values from the component's props using the\nfollowing rule: concatenate the ",(0,l.jsx)(n.code,{children:"id"})," of the ",(0,l.jsx)(n.code,{children:"boxShadow"})," control with the value you wish to extract. The example below\ndemonstrates how to extract all possible values from the ",(0,l.jsx)(n.code,{children:"boxShadow"})," control and use them to add the shadow to the ",(0,l.jsx)(n.code,{children:"div"})," element."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'import { Brizy } from "@brizy/core";\nimport { hexToRgba } from "./utils";\nimport React, { JSX } from "react";\n\ninterface Props {\n  boxShadow: "none" | "inset" | "outset";\n  boxShadowBlur: number;\n  boxShadowSpread: number;\n  boxShadowColorHex: string;\n  boxShadowHorizontal: string;\n  boxShadowColorOpacity: number;\n  boxShadowColorPalette: string | undefined;\n  boxShadowVertical: number;\n}\n\nconst Container = (props: Props): JSX.Element => {\n  const { \n    boxShadow,\n    boxShadowColorOpacity,\n    boxShadowColorHex,\n    boxShadowHorizontal,\n    boxShadowVertical,\n    boxShadowBlur,\n    boxShadowSpread,\n    children\n  } = props;\n\n  return (\n    <div \n      style={{ \n        boxShadow: `${boxShadow} ${boxShadowHorizontal}px ${boxShadowVertical}px \n        ${boxShadowBlur}px ${boxShadowSpread}px ${hexToRgba(boxShadowColorHex,boxShadowColorOpacity)}`\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nBrizy.registerComponent(Container, {\n  id: "ThirdParty.Container",\n  component: { editor: Container, view: Container },\n  title: "My Container",\n  category: "custom",\n  options: (props) => {\n    return [\n      {\n        selector: ".brz-container",\n        toolbar: [\n          {\n            id: "toolbarCurrentElement",\n            type: "popover",\n            config: {\n              icon: "nc-container",\n              title: "Container"\n            },\n            devices: "desktop",\n            options: [\n              {\n                id: "boxShadow",\n                type: "boxShadow",\n                devices: "desktop"\n              }\n            ]\n          }\n        ]\n      }\n    ];\n  }\n});\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},6598:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/boxShadow-63fa9dc912b52b2b71c1919e071a8293.png"},7465:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/boxShadowDropdown-19cae10f39142bfead98aef8d9fe8396.png"},3030:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/boxShadowHover-4af20f636b54d3698bc2682aaf505f5d.png"},4410:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/boxShadowInfo-bedfbec50f32bfd456ce16407dd4dc8e.png"},3023:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var l=t(3696);const s={},o=l.createContext(s);function d(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);