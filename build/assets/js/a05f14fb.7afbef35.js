"use strict";(self.webpackChunk_brizy_docs=self.webpackChunk_brizy_docs||[]).push([[3990],{7583:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=o(2540),r=o(3023);const s={sidebar_position:4,toc_max_heading_level:4},i="Control Group",l={id:"using-controls/control-group",title:"Control Group",description:"Group control is a control used to group two or more other controls.  It modifies the UI to be more intuitive and clear for the end user.  This control itself does not return any value. Its primary function is to omit rendering the divider between controls within the group, visually indicating that these controls are interrelated",source:"@site/docs-internals/using-controls/control-group.md",sourceDirName:"using-controls",slug:"/using-controls/control-group",permalink:"/docs-internals/using-controls/control-group",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"Responsive Control",permalink:"/docs-internals/using-controls/responsive-control"},next:{title:"Control Popover",permalink:"/docs-internals/using-controls/control-popover"}},c={},a=[{value:"UI examples",id:"ui-examples",level:3},{value:"Code example",id:"code-example",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"control-group",children:"Control Group"}),"\n",(0,t.jsxs)(n.p,{children:["Group control is a control used to group two or more other controls. ",(0,t.jsx)("br",{})," It modifies the UI to be more intuitive and clear for the end user. ",(0,t.jsx)("br",{})," This control itself does not return any value. Its primary function is to omit rendering the divider between controls within the group, visually indicating that these controls are interrelated ",(0,t.jsx)("br",{}),"\nFor group control, the ",(0,t.jsx)(n.code,{children:"id"})," property has no effect and is used only to separate groups by names. ",(0,t.jsx)(n.a,{href:"../editor-controls/containers/group",children:"Read more"})]}),"\n",(0,t.jsx)(n.p,{children:"As an example, we have some alert component that offer two options:"}),"\n",(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"Display close button ( switch control )"}),(0,t.jsx)("li",{children:"Delay ( slider control )"})]}),"\n",(0,t.jsxs)(n.p,{children:["These options are related. If the ",(0,t.jsx)(n.code,{children:"Display close button"})," option is enabled, then we should specify the ",(0,t.jsx)(n.code,{children:"Delay"})," after which the close button will be rendered."]}),"\n",(0,t.jsx)(n.h3,{id:"ui-examples",children:"UI examples"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"How these usually look:"})," ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)("img",{class:"brz-img--border",src:"/img/controls/alert-options-no-group.png"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["How they look with ",(0,t.jsx)(n.code,{children:"group"})," control:"]})," ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)("img",{class:"brz-img--border",src:"/img/controls/alert-options-group.png"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What's the difference:"})," ",(0,t.jsx)("br",{}),"\nThe difference between the first and second example lies in the presence of a divider. In the first example, a divider separates the options. In the second example (using ",(0,t.jsx)(n.code,{children:"group"})," control), the divider is omitted. ",(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.h3,{id:"code-example",children:"Code example"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["In this example, we implemented the group control with two other options that were described ",(0,t.jsx)(n.a,{href:"#ui-examples",children:"above"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const getToolbarItems = ({ getValue }) => {\n  const closeButtonState = getValue("closeButtonState");\n\n  return [\n    {\n      id: "toolbarShowHideButton",\n      type: "popover",\n      config: {\n        icon: "nc-alert",\n        title: "Alert"\n      },\n      position: 60,\n      options: [\n        {\n          id: "groupCloseButton",\n          type: "group",\n          devices: "desktop",\n          options: [\n            {\n              id: "closeButtonState",\n              type: "switch",\n              label: "Display Close Button"\n            },\n            {\n              id: "delay",\n              label: "Delay",\n              type: "slider",\n              disabled: closeButtonState === "off",\n              config: {\n                min: 0,\n                max: 10,\n                units: [{ title: "s", value: "s" }]\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},3023:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(3696);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);