"use strict";(self.webpackChunk_brizy_docs=self.webpackChunk_brizy_docs||[]).push([[6924],{4937:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var l=n(2540),s=n(3023);const o={toc_max_heading_level:4},d="Text Shadow",r={id:"editor-controls/data-controls/text-shadow",title:"Text Shadow",description:"The textShadow control provides an interface to modify the CSS text-shadow property of text elements.",source:"@site/docs-internals/editor-controls/data-controls/text-shadow.md",sourceDirName:"editor-controls/data-controls",slug:"/editor-controls/data-controls/text-shadow",permalink:"/docs-internals/editor-controls/data-controls/text-shadow",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"Slider",permalink:"/docs-internals/editor-controls/data-controls/slider"},next:{title:"Toggle Button",permalink:"/docs-internals/editor-controls/data-controls/toggle-button"}},i={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Basic example",id:"basic-example",level:3},{value:"Return value",id:"return-value",level:3},{value:"Usage",id:"usage",level:3},{value:"Class name example",id:"class-name-example",level:4},{value:"Roles example",id:"roles-example",level:4},{value:"Devices examples",id:"devices-examples",level:4},{value:"Disabled examples",id:"disabled-examples",level:4},{value:"States example",id:"states-example",level:4},{value:"Default value example",id:"default-value-example",level:4},{value:"CSS examples (<code>selector</code>, <code>style</code>)",id:"css-examples-selector-style",level:4},{value:"Usage in HTML example",id:"usage-in-html-example",level:4}];function a(e){const t={code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h1,{id:"text-shadow",children:"Text Shadow"}),"\n",(0,l.jsxs)(t.p,{children:["The ",(0,l.jsx)(t.code,{children:"textShadow"})," control provides an interface to modify the CSS ",(0,l.jsx)(t.code,{children:"text-shadow"})," property of text elements."]}),"\n",(0,l.jsx)(t.p,{children:"Example of the control:"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"Text Shadow",src:n(6779).A+"",width:"286",height:"228"})}),"\n",(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsxs)(t.li,{children:["Shadow dropdown menu - this dropdown menu allows you to choose whether to apply a shadow to the text or not. It has two options: ",(0,l.jsx)(t.code,{children:"None"})," and ",(0,l.jsx)(t.code,{children:"Shadow"}),"."]}),"\n",(0,l.jsx)(t.li,{children:"Color selector area - this is where you can pick the exact color by clicking on the desired point within the color gradient."}),"\n",(0,l.jsx)(t.li,{children:"Hue slider - this vertical slider allows you to choose the hue (basic color) you want to work with."}),"\n",(0,l.jsx)(t.li,{children:"Opacity slider - this slider lets you adjust the opacity of the selected color."}),"\n",(0,l.jsx)(t.li,{children:"Color presets - these are preset color options from the global styles that you can quickly select."}),"\n",(0,l.jsx)(t.li,{children:"Settings icon - opens sidebar with the global styles."}),"\n",(0,l.jsx)(t.li,{children:"Hex color input - this area shows the hexadecimal color code of the selected color and allows you to input a specific hex code to choose a color directly. The eyedropper icon next to it lets you select any color from anywhere on the page by clicking on it."}),"\n",(0,l.jsx)(t.li,{children:"Blur radius - this input field allows to specify the blur radius for the shadow."}),"\n",(0,l.jsx)(t.li,{children:"Vertical offset - this input field allows to specify the vertical offset of the shadow."}),"\n",(0,l.jsx)(t.li,{children:"Horizontal offset - this input field allows to specify the horizontal offset of the shadow."}),"\n"]}),"\n",(0,l.jsxs)(t.p,{children:["Example of the control with state ",(0,l.jsx)(t.code,{children:'"hover"'}),":"]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"Text Shadow Hover",src:n(7046).A+"",width:"286",height:"230"})}),"\n",(0,l.jsx)(t.p,{children:"Example of the control with dropdown opened:"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"Text Shadow",src:n(665).A+"",width:"286",height:"228"})}),"\n",(0,l.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:"Default"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"id"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The identifier of the key where the text shadow will save your data"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"type"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Type should be ",(0,l.jsx)(t.code,{children:'"textShadow"'})," to use this control"]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"className?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The custom CSS class name that will be set on the control. It can be used to modify the control styles."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"position?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The position of the control in toolbar"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"roles?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"Array<Roles>"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Render the control only if the current user's role matches one of the roles in the provided array. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.strong,{children:(0,l.jsx)(t.code,{children:'type Role = "admin" | "viewer" | "editor" | "designer" | "manager"'})})]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"devices?"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:'"all"'})," | ",(0,l.jsx)(t.code,{children:'"desktop"'})," | ",(0,l.jsx)(t.code,{children:'"responsive"'})]}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:'"all"'})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Define the devices where the control will be rendered. ",(0,l.jsx)(t.code,{children:'"all"'})," renders the control on all devices. ",(0,l.jsx)(t.code,{children:'"desktop"'})," renders the control only on desktop devices. ",(0,l.jsx)(t.code,{children:'"responsive"'})," renders the control on both tablet and mobile devices"]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"disabled?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"false"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Configure the condition under which the control is disabled or enabled"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"states?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"Array<State>"})}),(0,l.jsxs)(t.td,{style:{textAlign:"center"},children:["[",(0,l.jsx)(t.code,{children:'"normal"'}),"]"]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Allows the control to work in different states. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("b",{children:(0,l.jsx)(t.code,{children:'State = "normal" | "hover" | "active"'})})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:'"normal"'})," - the normal state of an element, ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:'"hover"'})," - the state when the element is hovered over, ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:'"active"'})," - the state when the element is active (e.g., current page in pagination)"]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"default?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"Default"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The default control value. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("b",{children:(0,l.jsx)(t.code,{children:"Default: { palette: string; hex: string; opacity: number; blur: number; horizontal: number; vertical: number; }"})})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"blur"})," - specifies the blur radius for the shadow ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"hex"})," - defines the color of the shadow in hexadecimal format ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"horizontal"})," - horizontal offset of the shadow ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"opacity"})," - indicates the opacity of the shadow ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"palette"})," - predefined palette from global styles ",(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"vertical"})," - vertical offset of the shadow"]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"selector?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The CSS selector to which the styles will be applied"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"style?"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"function"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["This function generates CSS output based on the value from the control. The parameter is an object containing a ",(0,l.jsx)(t.code,{children:"value"})," key, which holds the current value of the control. The function returns an object with a CSS selector key and CSS property values.  ",(0,l.jsxs)("pre",{children:[(0,l.jsx)(t.code,{children:"style: ({value}) => {"}),(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"return {"}),(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:'"{{WRAPPER}}:hover .brz-text": {'}),(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:'  "text-shadow": ${value.horizontal}px ${value.vertical}px ${value.blur}px ${value.hex}'}),(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:" }"}),(0,l.jsx)("br",{})," ",(0,l.jsx)(t.code,{children:"}"}),(0,l.jsx)("br",{}),(0,l.jsx)(t.code,{children:"}"})]})]})]})]})]}),"\n",(0,l.jsx)(t.h3,{id:"basic-example",children:"Basic example"}),"\n",(0,l.jsx)(t.p,{children:"Standard definition with only the required keys. This control will be displayed on all devices."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow"\n}\n'})}),"\n",(0,l.jsx)(t.h3,{id:"return-value",children:"Return value"}),"\n",(0,l.jsx)(t.p,{children:"Returns an object with the following values:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:"{\n  blur: number;\n  hex: string;\n  horizontal: number;\n  opacity: number;\n  palette: string | undefined;\n  vertical: number;\n}\n"})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"blur"})," - specifies the blur radius for the shadow; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.code,{children:"hex"})," - defines the color of the shadow in hexadecimal format; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.code,{children:"horizontal"})," - horizontal offset of the shadow; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.code,{children:"opacity"})," - indicates the opacity of the shadow (from 0 to 1); ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.code,{children:"palette"})," - predefined palette from global styles; ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.code,{children:"vertical"})," - vertical offset of the shadow; ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(t.p,{children:"Example of the value:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  blur: 4;\n  hex: "#dd4949";\n  horizontal: 1;\n  opacity: 1;\n  palette: undefined;\n  vertical: 2;\n}\n'})}),"\n",(0,l.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(t.h4,{id:"class-name-example",children:"Class name example"}),"\n",(0,l.jsx)(t.p,{children:"Adding a CSS class to the control's DOM node."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow"\n  className: "myTextShadow"\n}\n'})}),"\n",(0,l.jsx)(t.h4,{id:"roles-example",children:"Roles example"}),"\n",(0,l.jsx)(t.p,{children:"Show the control only to users with admin and designer privileges."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow",\n  roles: ["admin", "designer"]\n}\n'})}),"\n",(0,l.jsx)(t.h4,{id:"devices-examples",children:"Devices examples"}),"\n",(0,l.jsxs)(t.p,{children:["It will be rendered on all devices. This value can be skipped because it is set to ",(0,l.jsx)(t.code,{children:'"all"'})," by default."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow",\n  devices: "all"\n}\n'})}),"\n",(0,l.jsxs)(t.p,{children:["Rendering will occur only on ",(0,l.jsx)(t.code,{children:"desktop"}),"."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow",\n  devices: "desktop"\n}\n'})}),"\n",(0,l.jsxs)(t.p,{children:["The display is limited to responsive modes, specifically ",(0,l.jsx)(t.code,{children:"tablet"})," and ",(0,l.jsx)(t.code,{children:"mobile"}),"."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow",\n  devices: "responsive"\n}\n'})}),"\n",(0,l.jsx)(t.h4,{id:"disabled-examples",children:"Disabled examples"}),"\n",(0,l.jsx)(t.p,{children:"Control will be disabled. Normally, here should be your dynamic condition."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow", \n  disabled: true\n}\n'})}),"\n",(0,l.jsxs)(t.p,{children:["Control will be disabled when ",(0,l.jsx)(t.code,{children:"videoType"})," variable will be ",(0,l.jsx)(t.code,{children:'"custom"'}),".\n",(0,l.jsx)(t.code,{children:"getValue"})," is a getter function that allows us to retrieve the value of controls by their id.\n",(0,l.jsx)(t.code,{children:'"videoType"'})," is the id of the ",(0,l.jsx)(t.code,{children:'"select"'})," control below."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'const getToolbarContols = ({ getValue }) => {\n  const videoType = getValue("videoType");\n\n  return [\n    {\n      id: "videoType",\n      type: "select",\n      choices: [\n        { title: "Youtube", value: "youtube" },\n        { title: "Custom", value: "custom" }\n      ]\n    },\n    {\n      id: "textShadow",\n      type: "textShadow",\n      disabled: videoType === "custom"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(t.h4,{id:"states-example",children:"States example"}),"\n",(0,l.jsx)(t.p,{children:"Allows the control to work in normal and hover states."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow", \n  states: ["normal", "hover"]\n}\n'})}),"\n",(0,l.jsx)(t.p,{children:"Allows the control to work in normal, hover and active states."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow", \n  states: ["normal", "hover", "active"]\n}\n'})}),"\n",(0,l.jsx)(t.h4,{id:"default-value-example",children:"Default value example"}),"\n",(0,l.jsxs)(t.p,{children:["In the ",(0,l.jsx)(t.code,{children:"default"})," object you can set the default values for any ",(0,l.jsx)(t.code,{children:"textShadow"})," properties."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow",\n  default: {\n    blur: 5,\n    hex: "#000000",\n    horizontal: 2,\n    opacity: 0.5,\n    palette: undefined,\n    vertical: 1\n  }\n}\n'})}),"\n",(0,l.jsxs)(t.h4,{id:"css-examples-selector-style",children:["CSS examples (",(0,l.jsx)(t.code,{children:"selector"}),", ",(0,l.jsx)(t.code,{children:"style"}),")"]}),"\n",(0,l.jsxs)(t.p,{children:["Configure the CSS ",(0,l.jsx)(t.code,{children:"text-shadow"})," property of the ",(0,l.jsx)(t.code,{children:".brz-text"})," element using the ",(0,l.jsx)(t.code,{children:"style"})," function."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow",\n  states: ["normal", "hover"],\n  style: ({ value }) => {\n    return {\n      "{{WRAPPER}}:hover .brz-text": {\n        "text-shadow": `${value.horizontal}px ${value.vertical}px ${value.blur}px ${value.hex}`\n      }\n    }\n  }\n}\n'})}),"\n",(0,l.jsxs)(t.p,{children:["Configure the CSS ",(0,l.jsx)(t.code,{children:"text-shadow"})," property of the ",(0,l.jsx)(t.code,{children:".brz-text"})," element using ",(0,l.jsx)(t.code,{children:"selector"}),". All the styles will be\napplied automatically."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",children:'{\n  id: "textShadow",\n  type: "textShadow",\n  states: ["normal", "hover"],\n  selector: "{{WRAPPER}}:hover .brz-text"\n}\n'})}),"\n",(0,l.jsx)(t.h4,{id:"usage-in-html-example",children:"Usage in HTML example"}),"\n",(0,l.jsxs)(t.p,{children:["To obtain values for the CSS ",(0,l.jsx)(t.code,{children:"text-shadow"})," property, access the necessary values from the component's props using the\nfollowing rule: concatenate the ",(0,l.jsx)(t.code,{children:"id"})," of the ",(0,l.jsx)(t.code,{children:"textShadow"})," control with the value you wish to extract. The example below\ndemonstrates how to extract all possible values from the ",(0,l.jsx)(t.code,{children:"textShadow"})," control and use them to add the shadow to the text\ninside a ",(0,l.jsx)(t.code,{children:"p"})," element."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-tsx",children:'import { Brizy } from "@brizy/core";\n\ninterface Props {\n  textShadowColorHex: string;\n  textShadowBlur: number;\n  textShadowHorizontal: number;\n  textShadowVertical: number;\n  textShadowColorOpacity: number;\n  textShadowColorPalette: string;\n}\n\nconst Component = (props: Props): JSX.Element => {\n  const { textShadowColorHex, textShadowBlur, textShadowHorizontal, textShadowVertical } = props;\n\n  return <div className="component">\n    <p style={{ textShadow: `${textShadowHorizontal}px ${textShadowVertical}px ${textShadowBlur}px ${textShadowColorHex}` }}>\n      text\n    </p>\n  </div>\n}\n\nBrizy.registerComponent({\n  id: "ThirdParty.Component",\n  component: { editor: Component, view: Component },\n  title: "Component",\n  category: "custom",\n  options: (props) => {\n    return [\n      {\n        selector: ".component",\n        toolbar: [\n          {\n            id: "toolbarColor",\n            type: "popover",\n            config: {\n              size: "medium",\n              title: "Colors",\n              icon: {\n                style: {\n                  backgroundColor: "#000000"\n                }\n              },\n            },\n            devices: "desktop",\n            options: [\n              {\n                id: "tabsColor",\n                type: "tabs",\n                tabs: [\n                  {\n                    id: "textShadow",\n                    type: "textShadow",\n                    states: ["normal", "hover"]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n})\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},665:(e,t,n)=>{n.d(t,{A:()=>l});const l=n.p+"assets/images/text-shadow-dropdown-48d6562010c4dd9b548984a19b0d2eaf.png"},7046:(e,t,n)=>{n.d(t,{A:()=>l});const l=n.p+"assets/images/text-shadow-hover-144f92d52a1b12a3b7371e149c3cda5e.png"},6779:(e,t,n)=>{n.d(t,{A:()=>l});const l=n.p+"assets/images/text-shadow-efbf21ceb5d1dda6047311410d3562cd.png"},3023:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>r});var l=n(3696);const s={},o=l.createContext(s);function d(e){const t=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),l.createElement(o.Provider,{value:t},e.children)}}}]);