"use strict";(self.webpackChunk_brizy_docs=self.webpackChunk_brizy_docs||[]).push([[9299],{2880:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var s=n(2540),l=n(3023);const r={toc_max_heading_level:4},i="Filters",d={id:"editor-controls/data-controls/filters",title:"Filters",description:"The control provides a user interface for adjusting CSS filter properties. It features four sliders, each responsible for modifying a specific filter property: hue, brightness, contrast, and saturation.",source:"@site/docs-internals/editor-controls/data-controls/filters.md",sourceDirName:"editor-controls/data-controls",slug:"/editor-controls/data-controls/filters",permalink:"/docs-internals/editor-controls/data-controls/filters",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"File Upload",permalink:"/docs-internals/editor-controls/data-controls/fileUpload"},next:{title:"Gallery",permalink:"/docs-internals/editor-controls/data-controls/gallery"}},c={},o=[{value:"Parameters",id:"parameters",level:3},{value:"Basic example",id:"basic-example",level:3},{value:"Return value",id:"return-value",level:3},{value:"Usage",id:"usage",level:3},{value:"Roles example",id:"roles-example",level:4},{value:"Devices examples",id:"devices-examples",level:4},{value:"Disabled examples",id:"disabled-examples",level:4},{value:"States example",id:"states-example",level:4},{value:"Default value examples",id:"default-value-examples",level:4},{value:"CSS examples",id:"css-examples",level:4},{value:"Usage in HTML example",id:"usage-in-html-example",level:4}];function a(e){const t={code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"filters",children:"Filters"}),"\n",(0,s.jsxs)(t.p,{children:["The control provides a user interface for adjusting CSS ",(0,s.jsx)(t.code,{children:"filter"})," properties. It features four sliders, each responsible for modifying a specific filter property: ",(0,s.jsx)(t.code,{children:"hue"}),", ",(0,s.jsx)(t.code,{children:"brightness"}),", ",(0,s.jsx)(t.code,{children:"contrast"}),", and ",(0,s.jsx)(t.code,{children:"saturation"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Example of control:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Filters",src:n(8644).A+"",width:"252",height:"233"})}),"\n",(0,s.jsxs)(t.p,{children:["Example of control with state ",(0,s.jsx)(t.code,{children:'"hover"'}),":"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Filters",src:n(6629).A+"",width:"289",height:"232"})}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Default"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"id"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The identifier of the key where the control will save your data"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"type"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Type should be ",(0,s.jsx)(t.code,{children:'"filters"'})," to use this control"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"position?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The position of the control in toolbar"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"roles?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Array<Role>"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Render the control only if the current user's role matches one of the roles in the provided array. ",(0,s.jsx)("br",{})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:'type Role = "admin" | "viewer" | "editor" | "designer" | "manager"'})})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"devices?"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:'"all"'})," | ",(0,s.jsx)(t.code,{children:'"desktop"'})," | ",(0,s.jsx)(t.code,{children:'"responsive"'})]}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:'"all"'})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Define the devices where the control will be rendered. ",(0,s.jsx)(t.code,{children:'"all"'})," renders the control on all devices. ",(0,s.jsx)(t.code,{children:'"desktop"'})," renders the control only on desktop devices. ",(0,s.jsx)(t.code,{children:'"responsive"'})," renders the control on both tablet and mobile devices"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"disabled?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"boolean"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"false"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Configure the condition under which the control is disabled or enabled."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"states?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Array<State>"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["[",(0,s.jsx)(t.code,{children:'"normal"'}),"]"]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Allows for different styles based on the element's state ",(0,s.jsx)("br",{})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)("b",{children:(0,s.jsx)(t.code,{children:'State = "normal" | "hover" | "active"'})})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:'"normal"'})," - the normal state of an element, ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:'"hover"'})," - the state when the element is hovered over, ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:'"active"'})," - the state when the element is active (e.g., current page in pagination)"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"default?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Default"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The default control value. ",(0,s.jsx)("br",{})," ",(0,s.jsx)("br",{}),(0,s.jsx)("b",{children:(0,s.jsx)(t.code,{children:"Default: { brightness: number; hue: number; saturation: number; contrast: number; }"})})," ",(0,s.jsx)("br",{}),(0,s.jsx)(t.code,{children:"brightness"})," - adjusts the brightness of an image or element ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:"hue"})," - controls the hue (color) applied to an image or element ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:"saturation"})," - adjusts the color saturation applied ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:"contrast"})," - controls the contrast between colors"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"selector?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The CSS selector to which the styles will be applied"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"style?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"function"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This function generates CSS output based on the value from the control. The parameter is an object containing a ",(0,s.jsx)(t.code,{children:"value"})," key, which holds the current value of the control. The function returns an object with a CSS selector key and CSS property values.  ",(0,s.jsxs)("pre",{children:[(0,s.jsx)(t.code,{children:"style: ({value}) => {"}),(0,s.jsx)("br",{}),(0,s.jsx)(t.code,{children:"const { brightness } = value;"})," ",(0,s.jsx)("br",{}),(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:"return {"}),(0,s.jsx)("br",{}),"  ",(0,s.jsx)(t.code,{children:'"{{WRAPPER}} .brz-image": {'}),(0,s.jsx)("br",{}),"    ",(0,s.jsx)(t.code,{children:"filter: 'brightness(${brightness}%)';"})," ",(0,s.jsx)("br",{}),"  ",(0,s.jsx)(t.code,{children:"}"}),(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:"}"}),(0,s.jsx)("br",{}),(0,s.jsx)(t.code,{children:"}"})]})]})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"basic-example",children:"Basic example"}),"\n",(0,s.jsx)(t.p,{children:"Standard definition with only the required keys. This control will be displayed on all devices."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters"\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"return-value",children:"Return value"}),"\n",(0,s.jsx)(t.p,{children:"Control returns an object with current values for each filter property."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"{\n  brightness: number;\n  hue: number;\n  saturation: number;\n  contrast: number;\n}\n\n"})}),"\n",(0,s.jsx)(t.p,{children:"Example of value:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"{\n  brightness: 100,\n  hue: 0,\n  saturation: 100,\n  contrast: 100\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.h4,{id:"roles-example",children:"Roles example"}),"\n",(0,s.jsx)(t.p,{children:"Show the control only to users with admin and designer privileges."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  roles: ["admin", "designer"]\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"devices-examples",children:"Devices examples"}),"\n",(0,s.jsxs)(t.p,{children:["It will be rendered on all devices. This value can be skipped because it is set to ",(0,s.jsx)(t.code,{children:'"all"'})," by default."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  devices: "all"\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Rendering will occur only on ",(0,s.jsx)(t.code,{children:"desktop"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  devices: "desktop"\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["The display is limited to responsive modes, specifically ",(0,s.jsx)(t.code,{children:"tablet"})," and ",(0,s.jsx)(t.code,{children:"mobile"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  devices: "responsive"\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"disabled-examples",children:"Disabled examples"}),"\n",(0,s.jsx)(t.p,{children:"Control will be disabled. Normally, here should be your dynamic condition."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  disabled: true\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Control will be disabled when ",(0,s.jsx)(t.code,{children:"videoType"})," variable will be ",(0,s.jsx)(t.code,{children:'"custom"'}),".\n",(0,s.jsx)(t.code,{children:"getValue"})," is a getter function that allows us to retrieve the value of controls by their id.\n",(0,s.jsx)(t.code,{children:'"videoType"'})," is the id of the ",(0,s.jsx)(t.code,{children:'"select"'})," control below."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'const getToolbarContols = ({ getValue }) => {\n  const videoType = getValue("videoType");\n\n  return [\n    {\n      id: "videoType",\n      type: "select",\n      choices: [\n        { title: "Youtube", value: "youtube" },\n        { title: "Custom", value: "custom" }\n      ]\n    },\n    {\n      id: "filters",\n      type: "filters",\n      disabled: videoType === "custom"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"states-example",children:"States example"}),"\n",(0,s.jsx)(t.p,{children:"Use the control in the normal and hover states independently."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  states: ["normal", "hover"]\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Allows the control to work in normal, hover and active states."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters", \n  states: ["normal", "hover", "active"]\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"default-value-examples",children:"Default value examples"}),"\n",(0,s.jsxs)(t.p,{children:["The default control value will be applied for ",(0,s.jsx)(t.code,{children:"brightness"}),", ",(0,s.jsx)(t.code,{children:"hue"}),", ",(0,s.jsx)(t.code,{children:"saturation"}),", and ",(0,s.jsx)(t.code,{children:"contrast"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  default: {\n    brightness: 100,\n    hue: 100,\n    saturation: 100,\n    contrast: 100\n  }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Setting a default value for the ",(0,s.jsx)(t.code,{children:"hue"})," property only. Other properties will be 0."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n   default: {\n    hue: 100\n  }\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"css-examples",children:"CSS examples"}),"\n",(0,s.jsxs)(t.p,{children:["Configure the CSS ",(0,s.jsx)(t.code,{children:"filter"})," properties of the ",(0,s.jsx)(t.code,{children:".brz-image"})," element using the selector."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  selector: ".brz-image"\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["This code dynamically adjusts the ",(0,s.jsx)(t.code,{children:"filter"})," properties of elements with the class ",(0,s.jsx)(t.code,{children:".brz-image"})," based on the values of ",(0,s.jsx)(t.code,{children:"hue"}),", ",(0,s.jsx)(t.code,{children:"saturation"}),", ",(0,s.jsx)(t.code,{children:"brightness"}),", and ",(0,s.jsx)(t.code,{children:"contrast"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n  id: "filters",\n  type: "filters",\n  style: ({ value }) => {\n    const { hue, saturation, brightness, contrast } = value;\n\n    return {\n      ".brz-image": {\n        filter: `brightness(${brightness}%) hue-rotate(${hue}deg) saturate(${saturation}%) contrast(${contrast}%);`\n      }\n    };\n  }\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"usage-in-html-example",children:"Usage in HTML example"}),"\n",(0,s.jsx)(t.p,{children:"In the example below, we demonstrate how to implement the filters control and apply its values to an image element's CSS properties."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'import { Brizy } from "@brizy/core";\nimport React, { JSX } from "react";\n\ninterface Props {\n  brightness: number;\n  hue: number\n  saturation: number;\n  contrast: number;\n}\n\nconst Image = (props: Props): JSX.Element => {\n  const { brightness, hue, saturation, contrast } = props;\n\n  const filterStyle = {\n    filter: `brightness(${brightness}%) hue-rotate(${hue}deg) saturate(${saturation}%) contrast(${contrast}%);`\n  };\n\n  return (\n    <div className="brz-image" style={filterStyle}>\n      <img src="image-source.jpg"/>\n    </div>\n  );\n};\n\nBrizy.registerComponent({\n  id: "ThirdParty.Image",\n  component: { editor: Image, view: Image },\n  title: "My Image",\n  category: "essentials",\n  options: (props) => {\n    return [\n      {\n        selector: ".brz-image",\n        toolbar: [\n          {\n            id: "settingsTabs",\n            type: "tabs",\n            tabs: [\n              {\n                id: "filters",\n                label: "Filters",\n                options: [\n                  {\n                    id: "filters",\n                    type: "filters"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ];\n  },\n});\n'})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},6629:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/filters-hover-9d521c96876f41be6ab9b6fb4b93b331.png"},8644:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/filters-6eb3e859f30fb2dfaf5a786c08739a6c.png"},3023:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var s=n(3696);const l={},r=s.createContext(l);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);