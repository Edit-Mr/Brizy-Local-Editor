"use strict";(self.webpackChunk_brizy_docs=self.webpackChunk_brizy_docs||[]).push([[3969],{2809:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>a,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var r=n(2540),l=n(3023);const d={toc_max_heading_level:4},s="Border",o={id:"editor-controls/data-controls/border",title:"Border",description:"The border control designed to provide flexible styling options for the border of an element. It allows you to customize the color, style, opacity, and width of the border as a whole, or individually for each side (top, right, bottom, left).",source:"@site/docs-internals/editor-controls/data-controls/border.md",sourceDirName:"editor-controls/data-controls",slug:"/editor-controls/data-controls/border",permalink:"/docs-internals/editor-controls/data-controls/border",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"Background Color",permalink:"/docs-internals/editor-controls/data-controls/background-color"},next:{title:"Box Shadow",permalink:"/docs-internals/editor-controls/data-controls/box-shadow"}},i={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Basic example",id:"basic-example",level:3},{value:"Return value",id:"return-value",level:3},{value:"Usage",id:"usage",level:3},{value:"Class name example",id:"class-name-example",level:4},{value:"Roles example",id:"roles-example",level:4},{value:"Devices examples",id:"devices-examples",level:4},{value:"Disabled examples",id:"disabled-examples",level:4},{value:"States example",id:"states-example",level:4},{value:"Config styles example",id:"config-styles-example",level:4},{value:"Config width example",id:"config-width-example",level:4},{value:"Config opacity example",id:"config-opacity-example",level:4},{value:"Default value examples",id:"default-value-examples",level:4},{value:"CSS examples",id:"css-examples",level:4},{value:"Usage in HTML example",id:"usage-in-html-example",level:4}];function h(e){const t={code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"border",children:"Border"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"border"})," control designed to provide flexible styling options for the border of an element. It allows you to customize the color, style, opacity, and width of the border as a whole, or individually for each side (top, right, bottom, left)."]}),"\n",(0,r.jsx)(t.p,{children:"Example of the control:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Border",src:n(9219).A+"",width:"284",height:"229"})}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Border style dropdown menu - this dropdown menu allows you to choose which style to apply to the border. By default, it has 9 options."}),"\n",(0,r.jsx)(t.li,{children:"Color selector area - this is where you can pick the exact color by clicking on the desired point within the color gradient."}),"\n",(0,r.jsx)(t.li,{children:"Hue slider - this vertical slider allows you to choose the hue (basic color) you want to work with."}),"\n",(0,r.jsx)(t.li,{children:"Opacity slider - this slider lets you adjust the opacity of the selected color."}),"\n",(0,r.jsx)(t.li,{children:"Color presets - these are preset color options from global styles that you can quickly select."}),"\n",(0,r.jsx)(t.li,{children:"Settings icon - opens sidebar with the global styles."}),"\n",(0,r.jsx)(t.li,{children:"Hex color input - this area shows the hexadecimal color code of the selected color and allows you to input a specific hex code to choose a color directly. The eyedropper icon next to it lets you select any color from anywhere on the page by clicking on it."}),"\n",(0,r.jsx)(t.li,{children:"Border width - this input field allows you to specify the border width."}),"\n",(0,r.jsx)(t.li,{children:"Border width type - this icon allows to choose between changing border width for all sides at once or each side individually."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Example of the control with dropdown to select border style:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Border Style Dropdown",src:n(2950).A+"",width:"284",height:"229"})}),"\n",(0,r.jsx)(t.p,{children:"Example of the control with 4 input fields to specify border width for each side:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Border Ungrouped Width Inputs",src:n(1383).A+"",width:"284",height:"229"})}),"\n",(0,r.jsxs)(t.p,{children:["Example of the control with state ",(0,r.jsx)(t.code,{children:'"hover"'}),":"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Border Hover",src:n(1070).A+"",width:"280",height:"229"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Default"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"id"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["The identifier of the key where the ",(0,r.jsx)(t.code,{children:"border"})," will save your data"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"type"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Type should be ",(0,r.jsx)(t.code,{children:'"border"'})," to use this control"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"className?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The custom CSS class name that will be set on the control. It can be used to modify the control styles."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"position?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The position of the control in toolbar"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"roles?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Array<Role>"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Render the control only if the current user's role matches one of the roles in the provided array. ",(0,r.jsx)("br",{})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.code,{children:'type Role = "admin" | "viewer" | "editor" | "designer" | "manager"'})})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"devices?"})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:'"all"'})," | ",(0,r.jsx)(t.code,{children:'"desktop"'})," | ",(0,r.jsx)(t.code,{children:'"responsive"'})]}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:'"all"'})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Define the devices where the control will be rendered. ",(0,r.jsx)(t.code,{children:'"all"'})," renders the control on all devices. ",(0,r.jsx)(t.code,{children:'"desktop"'})," renders the control only on desktop devices. ",(0,r.jsx)(t.code,{children:'"responsive"'})," renders the control on both tablet and mobile devices"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"disabled?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Configure the condition under which the control is disabled or enabled"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"states?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Array<State>"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:'["normal"]'})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Allows for different styles based on the element's state ",(0,r.jsx)("br",{})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)("b",{children:(0,r.jsx)(t.code,{children:'State = "normal" | "hover" | "active"'})})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(t.code,{children:'"normal"'})," - the normal state of an element, ",(0,r.jsx)("br",{})," ",(0,r.jsx)(t.code,{children:'"hover"'})," - the state when the element is hovered over, ",(0,r.jsx)("br",{})," ",(0,r.jsx)(t.code,{children:'"active"'})," - the state when the element is active (e.g., current page in pagination)"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"config?.styles"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Array<Style>"})}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,r.jsx)(t.code,{children:'["none","solid",'}),(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:'"dashed","dotted",'}),(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:'"double","groove",'}),(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:'"ridge","inset","outset"]'})]}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Defines the available border styles that can be applied. By default, it includes 9 styles, which are all CSS ",(0,r.jsx)(t.code,{children:"border-style"})," values ",(0,r.jsx)("br",{})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)("b",{children:(0,r.jsx)(t.code,{children:'Style = "none" | "solid" | "dashed" | "dashed" | "dotted" | "double" | "groove" | "ridge" | "inset" | "outset"'})})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"config?.width"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Array<WidthType>"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:'["grouped", "ungrouped"]'})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Allows specifying whether the width of the border can be changed individually for each side or as a whole ",(0,r.jsx)("br",{})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)("b",{children:(0,r.jsx)(t.code,{children:'WidthType = "grouped" | "ungrouped"'})})," ",(0,r.jsx)("br",{}),(0,r.jsx)("br",{})," ",(0,r.jsx)(t.code,{children:'"grouped"'})," - allows changing the width of the border for all sides at once, ",(0,r.jsx)("br",{})," ",(0,r.jsx)(t.code,{children:'"ungrouped"'})," - allows changing the width of the border individually for each side"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"config?.opacity"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"true"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Controls whether the opacity of the border can be changed"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"default?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Default"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["The default control value. ",(0,r.jsx)("br",{})," ",(0,r.jsx)("br",{})," ",(0,r.jsxs)("b",{children:[(0,r.jsx)(t.code,{children:"Default: {"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"colorHex: string;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"colorOpacity: number;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"colorPalette: string;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"style: string;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:'widthType: "grouped" | "ungrouped";'}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"width: number;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"topWidth: number;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"rightWidth: number;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"bottomWidth: number;"}),(0,r.jsx)("br",{}),"\xa0",(0,r.jsx)(t.code,{children:"leftWidth: number;"}),(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"}"})]})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(t.code,{children:"colorHex"})," - the color of the border in hexadecimal format; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"colorOpacity"})," - specifies the opacity of the border; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"colorPalette"})," - a predefined palette from global styles; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"style"})," - the current style of the border; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"widthType"})," - the current width type; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"width"}),' - value which is applied for all sides of the border (changes when "widthType" is "grouped"); ',(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"topWidth"})," - the width of the top border; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"rightWidth"})," - the width of the right border; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"bottomWidth"})," - the width of the bottom border; ",(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"leftWidth"})," - the width of the left border;"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"selector?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The CSS selector to which the styles will be applied"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"style?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"function"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["This function generates CSS output based on the value from the control. The parameter is an object containing a ",(0,r.jsx)(t.code,{children:"value"})," key, which holds the current value of the control. The function returns an object with a CSS selector key and CSS property values. ",(0,r.jsxs)("pre",{children:[(0,r.jsx)(t.code,{children:"style: ({value}) => {"}),(0,r.jsx)("br",{})," ",(0,r.jsx)(t.code,{children:"return {"}),(0,r.jsx)("br",{})," \xa0",(0,r.jsx)(t.code,{children:'"{{WRAPPER}} .brz-button": {'}),(0,r.jsx)("br",{})," \xa0 \xa0 ",(0,r.jsx)(t.code,{children:"border: ${value.width}px ${value.style} ${value.hex}"}),(0,r.jsx)("br",{})," \xa0 \xa0 ",(0,r.jsx)(t.code,{children:"}"}),(0,r.jsx)("br",{})," \xa0 ",(0,r.jsx)(t.code,{children:"}"}),(0,r.jsx)("br",{}),(0,r.jsx)(t.code,{children:"}"})]})]})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"basic-example",children:"Basic example"}),"\n",(0,r.jsx)(t.p,{children:"Standard definition with only the required keys. This control will be displayed on all devices."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border"\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"return-value",children:"Return value"}),"\n",(0,r.jsx)(t.p,{children:"Returns an object with the following values:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  colorHex: string;\n  colorOpacity: number;\n  colorPalette: string;\n  style: string;\n  widthType: "grouped" | "ungrouped";\n  width: number;\n  topWidth: number;\n  rightWidth: number;\n  bottomWidth: number;\n  leftWidth: number;\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"colorHex"})," - the color of the border in hexadecimal format; ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"colorOpacity"})," - specifies the opacity of the border; ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"colorPalette"})," - a predefined palette from global styles; ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"style"})," - the current style of the border; ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"widthType"})," - the current width type;",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"width"})," - value which is applied for all sides of the border (changes when ",(0,r.jsx)(t.code,{children:'"widthType"'})," is ",(0,r.jsx)(t.code,{children:'"grouped"'}),"); ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"topWidth"})," - the width of the top border; ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"rightWidth"})," - the width of the right border; ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"bottomWidth"})," - the width of the bottom border; ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"leftWidth"})," - the width of the left border; ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(t.p,{children:"Example of value:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  colorHex: "#dcdee1",\n  colorOpacity: 1,\n  colorPalette: "",\n  style: "solid",\n  widthType: "grouped",\n  width: 2,\n  topWidth: 2,\n  rightWidth: 2,\n  bottomWidth: 2,\n  leftWidth: 2\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.h4,{id:"class-name-example",children:"Class name example"}),"\n",(0,r.jsx)(t.p,{children:"Adding a CSS class to the control's DOM node."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  className: "myCustomClass"\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"roles-example",children:"Roles example"}),"\n",(0,r.jsx)(t.p,{children:"Show the control only to users with admin and designer privileges."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  roles: ["admin", "designer"]\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"devices-examples",children:"Devices examples"}),"\n",(0,r.jsxs)(t.p,{children:["It will be rendered on all devices. This value can be skipped because it is set to ",(0,r.jsx)(t.code,{children:'"all"'})," by default."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  devices: "all"\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Rendering will occur only on ",(0,r.jsx)(t.code,{children:"desktop"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  devices: "desktop"\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The display is limited to responsive modes, specifically ",(0,r.jsx)(t.code,{children:"tablet"})," and ",(0,r.jsx)(t.code,{children:"mobile"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  devices: "responsive"\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"disabled-examples",children:"Disabled examples"}),"\n",(0,r.jsx)(t.p,{children:"Control will be disabled. Normally, here should be your dynamic condition."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  disabled: true\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Control will be disabled when ",(0,r.jsx)(t.code,{children:"videoType"})," variable will be ",(0,r.jsx)(t.code,{children:'"custom"'}),".\n",(0,r.jsx)(t.code,{children:"getValue"})," is a getter function that allows us to retrieve the value of controls by their id.\n",(0,r.jsx)(t.code,{children:'"videoType"'})," is the id of the ",(0,r.jsx)(t.code,{children:'"select"'})," control below."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'const getToolbarContols = ({ getValue }) => {\n  const videoType = getValue("videoType");\n\n  return [\n    {\n      id: "videoType",\n      type: "select",\n      choices: [\n        { title: "Youtube", value: "youtube" },\n        { title: "Custom", value: "custom" }\n      ]\n    },\n    {\n      id: "border",\n      type: "border",\n      disabled: videoType === "custom"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"states-example",children:"States example"}),"\n",(0,r.jsx)(t.p,{children:"Allows the control to work in normal and hover states."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  states: ["normal", "hover"]\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"Allows the control to work in normal, hover and active states."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  states: ["normal", "hover", "active"]\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"config-styles-example",children:"Config styles example"}),"\n",(0,r.jsx)(t.p,{children:"Defines the available border styles that will be available to select."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  config: {\n    styles: ["none", "solid"]\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"config-width-example",children:"Config width example"}),"\n",(0,r.jsx)(t.p,{children:"Allows specifying whether the width of the border can be changed individually for each side or as a whole. In this case you will not have a possibility to change the sides of the border separately."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  config: {\n    width: ["grouped"]\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"config-opacity-example",children:"Config opacity example"}),"\n",(0,r.jsx)(t.p,{children:"Controls whether the opacity of the border can be changed."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  config: {\n    opacity: false\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"default-value-examples",children:"Default value examples"}),"\n",(0,r.jsx)(t.p,{children:"In this example, the border control that has the default values."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  default: {\n    colorHex: "#dcdee1",\n    colorOpacity: 1,\n    colorPalette: "",\n    style: "solid",\n    widthType: "grouped",\n    width: 2,\n    topWidth: 2,\n    rightWidth: 2,\n    bottomWidth: 2,\n    leftWidth: 2\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"css-examples",children:"CSS examples"}),"\n",(0,r.jsxs)(t.p,{children:["Configure the CSS ",(0,r.jsx)(t.code,{children:"border"})," property of the ",(0,r.jsx)(t.code,{children:".brz-button"})," element using ",(0,r.jsx)(t.code,{children:"selector"}),". All the styles will be\napplied automatically."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  states: ["normal", "hover"],\n  selector: "{{WRAPPER}}:hover .brz-button"\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Set the border for ",(0,r.jsx)(t.code,{children:".brz-button"})," element with CSS using a border control value."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'{\n  id: "border",\n  type: "border",\n  style: ({ value }) => {\n    if(value.widthType === "ungrouped") {\n       return {\n         "{{WRAPPER}} .brz-button":\n           {\n             border: `${value.width}px ${value.style} ${value.colorHex}`,\n             "border-top-width": `${value.topWidth}px`,\n             "border-bottom-width": `${value.bottomWidth}px`,\n             "border-left-width": `${value.leftWidth}px`,\n             "border-right-width": `${value.rightWidth}px`\n           }\n       }\n    }\n\n    return {\n      "{{WRAPPER}} .brz-button": {\n        border: `${value.width}px ${value.style} ${value.colorHex}`\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"usage-in-html-example",children:"Usage in HTML example"}),"\n",(0,r.jsx)(t.p,{children:"In the example below, we use the border output value to determine specific classes for the button element."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:'import { Brizy } from "@brizy/core";\nimport React, { JSX } from "react";\nimport { Icon } from "./Icon";\n\ninterface Props {\n  borderColorHex: string;\n  borderColorOpacity: number;\n  borderColorPalette: string;\n  borderStyle: string;\n  borderWidthType: "grouped" | "ungrouped";\n  borderWidth: number;\n  borderTopWidth: number;\n  borderRightWidth: number;\n  borderBottomWidth: number;\n  borderLeftWidth: number;\n}\n\nconst Button = (props: Props): JSX.Element => {\n  const { border } = props;\n\n  const groupedBorder = `${border}px`;\n  const ungroupedBorder = `${borderTop}px ${borderRight}px ${borderBottom}px ${borderLeft}px`;\n\n  return (\n    <div\n      className={`brz-button ${border.borderStyle}`}\n      style={border.borderWidthType === "grouped" ? groupedBorder : ungroupedBorder}\n    >\n      Click\n    </div>\n  );\n};\n\nBrizy.registerComponent({\n  id: "ThirdParty.Button",\n  component: { editor: Button, view: Button },\n  title: "My Button",\n  category: "custom",\n  options: (props) => {\n    return [\n      {\n        selector: ".brz-button",\n        toolbar: [\n          {\n            id: "toolbarCurrentElement",\n            type: "popover",\n            config: {\n              icon: "nc-button",\n              title: "Button"\n            },\n            devices: "desktop",\n            options: [\n              {\n                id: "border",\n                type: "border",\n                devices: "desktop"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n})\n'})})]})}function a(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1070:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/border-hover-693c1dc2346b0714f2ba098992d2bc91.png"},2950:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/border-style-dropdown-8bf5c1f4121f350e8824eee7dfa8aba6.png"},1383:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/border-width-type-9f6f3d49fdc110cea5b21f2bc3f1080d.png"},9219:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/border-44961fce568ad022116f32bdd89b9900.png"},3023:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(3696);const l={},d=r.createContext(l);function s(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(d.Provider,{value:t},e.children)}}}]);