"use strict";(self.webpackChunk_brizy_docs=self.webpackChunk_brizy_docs||[]).push([[6140],{1835:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>a,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var l=t(2540),i=t(3023);const s={toc_max_heading_level:4},o="Popover",d={id:"editor-controls/containers/popover",title:"Popover",description:"The popover control is a button trigger with an icon that allows for opening and closing a popover. Additionally, it can display a tooltip text when hovered over, providing more information about the button's purpose or function.",source:"@site/docs-internals/editor-controls/containers/popover.md",sourceDirName:"editor-controls/containers",slug:"/editor-controls/containers/popover",permalink:"/docs-internals/editor-controls/containers/popover",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"Order",permalink:"/docs-internals/editor-controls/containers/order"},next:{title:"Sidebar Tabs",permalink:"/docs-internals/editor-controls/containers/sidebarTabs"}},r={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Basic example",id:"basic-example",level:3},{value:"Return value",id:"return-value",level:3},{value:"Usage",id:"usage",level:3},{value:"Class name example",id:"class-name-example",level:4},{value:"Roles example",id:"roles-example",level:4},{value:"Devices examples",id:"devices-examples",level:4},{value:"Disabled examples",id:"disabled-examples",level:4},{value:"Config <code>placement</code> example",id:"config-placement-example",level:4},{value:"Config <code>size</code> example",id:"config-size-example",level:4},{value:"Config <code>icon</code> example",id:"config-icon-example",level:4},{value:"Config <code>title</code> example",id:"config-title-example",level:4},{value:"Config <code>onOpenDirect</code> example",id:"config-onopendirect-example",level:4}];function h(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"popover",children:"Popover"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"popover"})," control is a button trigger with an icon that allows for opening and closing a popover. Additionally, it can display a tooltip text when hovered over, providing more information about the button's purpose or function."]}),"\n",(0,l.jsx)(n.p,{children:"Example of the control:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Popover",src:t(5906).A+"",width:"292",height:"202"})}),"\n",(0,l.jsx)(n.p,{children:"Example of the control with hover on the button:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Popover Title",src:t(3695).A+"",width:"292",height:"202"})}),"\n",(0,l.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"id"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["A unique identifier for the ",(0,l.jsx)(n.code,{children:"popover"}),". This is used to differentiate between multiple popovers"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"type"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Type should be ",(0,l.jsx)(n.code,{children:'"popover"'})," to use this control"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"className?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The custom CSS class name that will be set on the control. It can be used to modify the control styles."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"position?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"number"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The position of the control in toolbar"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"roles?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Array<Role>"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Render the control only if the current user's role matches one of the roles in the provided array. ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:'type Role = "admin" | "viewer" | "editor" | "designer" | "manager"'})})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"devices?"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:'"all"'})," | ",(0,l.jsx)(n.code,{children:'"desktop"'})," | ",(0,l.jsx)(n.code,{children:'"responsive"'})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"all"'})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["Define the devices where the control will be rendered. ",(0,l.jsx)(n.code,{children:'"all"'})," renders the control on all devices. ",(0,l.jsx)(n.code,{children:'"desktop"'})," renders the control only on desktop devices. ",(0,l.jsx)(n.code,{children:'"responsive"'})," renders the control on both tablet and mobile devices"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"disabled?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Configure the condition under which the control is disabled or enabled"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"options?"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Array<ControlItem>"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["An array of controls that will be displayed inside the popover ",(0,l.jsx)("br",{}),(0,l.jsx)("br",{})," ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:'ControlItem = { id: number; type: string; label?: string; disabled?: boolean; devices?: "all" | "desktop" | "responsive" }'})})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"id"})," - id of the other control where it will store its data ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"type"})," - type of the control ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"label"})," - the label displayed on the left side of the control ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"disabled"})," - configure the condition under which the control is disabled or enabled ",(0,l.jsx)("br",{})," ",(0,l.jsx)(n.code,{children:"devices"})," - define the devices where the control will be rendered"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"config?.placement"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:'"auto"'})," | ",(0,l.jsx)(n.code,{children:'"auto-start'})," | ",(0,l.jsx)(n.code,{children:'"auto-end"'})," | ",(0,l.jsx)(n.code,{children:'"top"'})," | ",(0,l.jsx)(n.code,{children:'"top-start"'})," | ",(0,l.jsx)(n.code,{children:'"top-end"'})," | ",(0,l.jsx)(n.code,{children:'"bottom"'})," | ",(0,l.jsx)(n.code,{children:'"bottom-start"'})," | ",(0,l.jsx)(n.code,{children:'"bottom-end"'})," | ",(0,l.jsx)(n.code,{children:'"right"'})," | ",(0,l.jsx)(n.code,{children:'"right-start"'})," | ",(0,l.jsx)(n.code,{children:'"right-end"'})," | ",(0,l.jsx)(n.code,{children:'"left"'})," | ",(0,l.jsx)(n.code,{children:'"left-start"'})," | ",(0,l.jsx)(n.code,{children:'"left-end"'})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"top"'})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Determines the position of the popover relative to the button"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"config?.size"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:'"small"'})," | ",(0,l.jsx)(n.code,{children:'"medium"'})," | ",(0,l.jsx)(n.code,{children:'"large"'})," | ",(0,l.jsx)(n.code,{children:'"xlarge"'})," | ",(0,l.jsx)(n.code,{children:'"auto"'})]}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"medium"'})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Specifies the size of the popover"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"config?.icon"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:'"nc-cog"'})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The icon displayed within the button"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"config?.title"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"string"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(n.code,{children:"title"})," attribute for the button, which appears as a tooltip when the user hovers over the button"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"config?.onOpenDirect"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Determines whether the popover content is displayed immediately when the toolbar is opened, rather than waiting for a click on the button"})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"basic-example",children:"Basic example"}),"\n",(0,l.jsx)(n.p,{children:"Standard definition with the keys necessary for the normal operation of the control. Will be displayed on all devices."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover", \n  type: "popover",\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"return-value",children:"Return value"}),"\n",(0,l.jsx)(n.p,{children:"Does not return anything."}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.h4,{id:"class-name-example",children:"Class name example"}),"\n",(0,l.jsx)(n.p,{children:"Adding a CSS class to the control's DOM node."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover",\n  type: "popover",\n  className: "myPopover"\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"roles-example",children:"Roles example"}),"\n",(0,l.jsx)(n.p,{children:"Show the control only to users with admin and designer privileges."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover",\n  type: "popover",\n  roles: ["admin", "designer"]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"devices-examples",children:"Devices examples"}),"\n",(0,l.jsxs)(n.p,{children:["It will be rendered on all devices. This value can be skipped because it is set to ",(0,l.jsx)(n.code,{children:'"all"'})," by default."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover", \n  type: "popover",\n  devices: "all",\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Rendering will occur only on ",(0,l.jsx)(n.code,{children:"desktop"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover", \n  type: "popover",\n  devices: "desktop",\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["The display is limited to responsive modes, specifically ",(0,l.jsx)(n.code,{children:"tablet"})," and ",(0,l.jsx)(n.code,{children:"mobile"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover", \n  type: "popover",\n  devices: "responsive",\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"disabled-examples",children:"Disabled examples"}),"\n",(0,l.jsx)(n.p,{children:"Control will be disabled. Normally, here should be your dynamic condition."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover", \n  type: "popover", \n  disabled: true,\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Control will be disabled when ",(0,l.jsx)(n.code,{children:"videoType"})," variable will be ",(0,l.jsx)(n.code,{children:'"custom"'}),".\n",(0,l.jsx)(n.code,{children:"getValue"})," is a getter function that allows us to retrieve the value of controls by their id.\n",(0,l.jsx)(n.code,{children:'"videoType"'})," is the id of the ",(0,l.jsx)(n.code,{children:'"select"'})," control below."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const getToolbarContols = ({ getValue }) => {\n  const videoType = getValue("videoType");\n\n  return [\n    {\n      id: "videoType",\n      type: "select",\n      choices: [\n        { title: "Youtube", value: "youtube" },\n        { title: "Custom", value: "custom" }\n      ]\n    },\n    {\n      id: "popover",\n      type: "popover",\n      disabled: videoType === "custom",\n      options: [\n        {\n          id: "closeButtonState",\n          type: "switch",\n          label: "Display Close Button"\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"config-placement-example",children:["Config ",(0,l.jsx)(n.code,{children:"placement"})," example"]}),"\n",(0,l.jsx)(n.p,{children:"Determines the position of the popover relative to the button."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover",\n  type: "popover", \n  config: {\n    placement: "bottom"\n  },\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"config-size-example",children:["Config ",(0,l.jsx)(n.code,{children:"size"})," example"]}),"\n",(0,l.jsx)(n.p,{children:"Specifies the size of the popover."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover",\n  type: "popover", \n  config: {\n    size: "xlarge"\n  },\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"config-icon-example",children:["Config ",(0,l.jsx)(n.code,{children:"icon"})," example"]}),"\n",(0,l.jsx)(n.p,{children:"The icon displayed within the button."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover",\n  type: "popover", \n  config: {\n    icon: "nc-alert"\n  },\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"config-title-example",children:["Config ",(0,l.jsx)(n.code,{children:"title"})," example"]}),"\n",(0,l.jsx)(n.p,{children:"The title attribute for the button, which appears as a tooltip when the user hovers over the button."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover",\n  type: "popover", \n  config: {\n    title: "Title"\n  },\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"config-onopendirect-example",children:["Config ",(0,l.jsx)(n.code,{children:"onOpenDirect"})," example"]}),"\n",(0,l.jsx)(n.p,{children:"Determines whether the popover content is displayed immediately when the toolbar is opened, rather than waiting for a click on the button."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'{\n  id: "popover",\n  type: "popover", \n  config: {\n    onOpenDirect: true\n  },\n  options: [\n    {\n      id: "closeButtonState",\n      type: "switch",\n      label: "Display Close Button"\n    }\n  ]\n}\n'})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},3695:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/popover-title-b50975a9ae20249e91dbdd778bdc5f2d.png"},5906:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/popover-d38e20f3b12cbdce549e6a6bb324b522.png"},3023:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var l=t(3696);const i={},s=l.createContext(i);function o(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);